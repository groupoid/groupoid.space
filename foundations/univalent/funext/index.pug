doctype html
html
    head
        meta(charset='utf-8')
        meta(http-equiv='x-ua-compatible' content='ie=edge')
        meta(name='viewport'        content='width=device-width, initial-scale=1')
        meta(name='author'          content='Namdak Tonpa')
        meta(name='twitter:site'    content='@5HT')
        meta(name='twitter:creator' content='@5HT')
        meta(property='og:title'       content='FUNEXT')
        meta(property='og:description' content='Functional Extensionality')
        meta(property='og:type'        content='website')
        meta(property='fb:app_id'      content='118554188236439')
        meta(property='og:url'         content='https://groupoid.space/foundations/univalent/funext/')
        link(rel='stylesheet' href='https://groupoid.space/main.css')
        block title
            title FUNEXT
            script(src='https://groupoid.space/styles/mathjax.js?config=TeX-AMS_HTML')
            script.
              window.MathJax = { jax: ["input/TeX", "input/MathML", "input/AsciiMath", "output/CommonHTML", "output/NativeMML"],
                             TeX: { extensions: ["AMSmath.js", "AMSsymbols.js", "autoload-all.js"] },
                             extensions: ["tex2jax.js", "asciimath2jax.js", "mml2jax.js", "MathMenu.js", "MathZoom.js"],
                             "HTML-CSS": { imageFont: null },
                             AuthorInit: function() {
                                 MathJax.Hub.Register.StartupHook("TeX AMSmath Ready", function() {
                                     var TEX = MathJax.InputJax.TeX;
                                     TEX.Definitions.Add({
                                         macros: {
                                           llparenthesis: ['Macro', '\\mathopen{\u2987}'],
                                           rrparenthesis: ['Macro', '\\mathclose{\u2988}'],
                                           llbracket:     ['Macro', '\\mathopen{\u27E6}'],
                                           rrbracket:     ['Macro', '\\mathclose{\u27E7}'],
                                         }
                                     });
                                 });
                             },
                             tex2jax: { inlineMath: [['$','$'], ['\\(','\\)']],
                                        processEscapes: true }
                         };
    body.content
        block content
        block vars


block content
    article.main
        .om
            section
                h1 FUNEXT
                span.
                    $$\def\mapright#1{\xrightarrow{{#1}}}
                      \def\mapleft#1{\xleftarrow{{#1}}}
                      \def\mapup#1{\Big\uparrow\rlap{\raise2pt{\scriptstyle{#1}}}}
                      \def\mapupl#1{\Big\uparrow\llap{\raise2pt{\scriptstyle{#1}}}}
                      \def\mapdown#1{\Big\downarrow\rlap{\raise2pt{\scriptstyle{#1}}}}
                      \def\mapdownl#1{\Big\downarrow\llap{\raise2pt{\scriptstyle{#1}}}}
                      \def\mapdiagl#1{\vcenter{\searrow}\rlap{\raise2pt{\scriptstyle{#1}}}}
                      \def\mapdiagr#1{\vcenter{\swarrow}\rlap{\raise2pt{\scriptstyle{#1}}}}
                    $$
        aside
            time Published: 25 JUL 2018
        .om
            section
                p.

                h2 Constructors
                code.
                    funext (A B: U) (f g: A -> B)
                           (p: (x:A) -> Path B (f x) (g x))
                         : Path (A -> B) f g
                p.

                h2 Elimination
                code.
                    happly (A B: U) (f g: A -> B) (p: Path (A -> B) f g) (x: A)
                         : Path B (f x) (g x)
                p.

                h2 Computation
                code.
                    funext_Beta (A B: U) (f g: A -> B)
                                (p: (x:A) -> Path B (f x) (g x))
                              : (x:A) -> Path B (f x) (g x)
                p.

                h2 Uniqueness
                code.
                    funext_Eta (A B: U) (f g: A -> B)
                               (p: Path (A -> B) f g)
                             : Path (Path (A -> B) f g) (funext A B f g (happly A B f g p)) p
                p.

                h2 Dependent Version
                code.
                    piext (A: U) (B: A -> U) (f g: (x: A) -> B x)
                          (p: (x: A) -> Path (B x) (f x) (g x))
                        : Path ((y: A) -> B y) f g
                p.

    include ../../../footer.pug
